// Created by Angelo John Benedict Laus - BSCPE 231

#include <iostream>
#include <fstream>
#include <string>
#include <cstdlib>
#include <ctime>

using namespace std;

struct player {

    string name;
    int guessCount;
    int winCount;
    int tiesCount;

};

player player1 = {"", 0, 0, 0};
player player2 = {"", 0, 0, 0};
    player singlePlayer;

void play();
void code();
void game();
void mCodeRelease();
void tutorial();
void spGame();
void stats(const string& filename, player& playerStats);
void scoreboard();
void goodbye();

string spName;
char goesFirst;
int p1Code[4], p2Code[4];
int spCode[4];


/*0
                                              
▀████▄     ▄███▀     ██     ▀████▀███▄   ▀███▀
  ████    ████      ▄██▄      ██   ███▄    █  
  █ ██   ▄█ ██     ▄█▀██▄     ██   █ ███   █  
  █  ██  █▀ ██    ▄█  ▀██     ██   █  ▀██▄ █  
  █  ██▄█▀  ██    ████████    ██   █   ▀██▄█  
  █  ▀██▀   ██   █▀      ██   ██   █     ███  
▄███▄ ▀▀  ▄████▄███▄   ▄████▄████▄███▄    ██  
                                              
                                              
Created by Angelo John Benedict Laus - BSCPE231
*/

int main() {

    char input;

    do {

        cout << " _____ ______   ________  ________  _________  _______   ________  _____ ______   ___  ________   ________     \n|\\   _ \\  _   \\|\\   __  \\|\\   ____\\|\\___   ___\\\\  ___ \\ |\\   __  \\|\\   _ \\  _   \\|\\  \\|\\   ___  \\|\\   ___ \\  \n\\ \\  \\\\\\__\\ \\  \\ \\  \\|\\  \\ \\  \\___|\\|___ \\  \\_\\ \\   __/|\\ \\  \\|\\  \\ \\  \\\\\\__\\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_|\\ \\  \n \\ \\  \\\\|__| \\  \\ \\   __  \\ \\_____  \\   \\ \\  \\ \\ \\  \\_|/_\\ \\   _  _\\ \\  \\\\|__| \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\ \\\\ \\  \n  \\ \\  \\    \\ \\  \\ \\  \\ \\  \\|____|\\  \\   \\ \\  \\ \\ \\  \\_|\\ \\ \\  \\\\  \\\\ \\  \\    \\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_\\\\ \\ \n   \\ \\__\\    \\ \\__\\ \\__\\ \\__\\____\\_\\  \\   \\ \\__\\ \\ \\_______\\ \\__\\\\ _\\\\ \\__\\    \\ \\__\\ \\__\\ \\__\\\\ \\__\\ \\_______\\\n    \\|__|     \\|__|\\|__|\\|__|\\_________\\   \\|__|  \\|_______|\\|__|\\|__|\\|__|     \\|__|\\|__|\\|__| \\|__|\\|_______|\n                            \\|_________|                                                                       \n\n" << endl;

    cout << "\t\t  ***********************************************************************\n\t\t  *\t\t\t\t\t\t\t\t\t*\n\t\t  *\t\t\t\t\t\t\t\t\t*\n\t\t  *\t\t\t\t\t\t\t\t\t*" << endl;

        cout << "\t\t  *\t\t\t\t[M]ultiplayer\t\t\t\t*\n\t\t  *\t\t\t\t[S]ingleplayer\t\t\t\t*\n\t\t  *\t\t\t\t[T]utorial\t\t\t\t*\n\t\t  *\t\t\t\tS[c]oreboard\t\t\t\t*" << endl;
        cout << "\t\t  *\t\t\t\t\t\t\t\t\t*\n\t\t  *\t\t\t\t\t\t\t\t\t*\n\t\t  *\t\t\t\t\t\t\t\tE[x]it  *" << endl;

    cout << "\t\t  *\t\t\t\t\t\t\t\t\t*\n\t\t  ***********************************************************************" << endl;

        cout << "\n\t\t\t\t\t\tYour input: ";
        cin >> input; cin.ignore();

        switch (input) {
            case 'M':
            case 'm':
            system("cls");
            play();
            system("cls");
                player1.name;
                player1.guessCount;
                player1.winCount;
                player1.tiesCount;

                stats("stats.txt", player1);
                
                player2.name;
                player2.guessCount;
                player2.winCount;
                player2.tiesCount;
                stats("stats.txt", player2);
            break;

            case 'S':
            case 's':
            system("cls");
            spGame();
            system("cls");
            break;

            case 'T':
            case 't':
            system("cls");
            tutorial();
            system("cls");
            break;

            case 'C':
            case 'c':
            system("cls");
            scoreboard();
            system("cls");
            break;

            case 'X':
            case 'x':
            system("cls");
            goodbye();
            return 0;
            break;

            default:
            system("cls");
            cout << "Error, please try again." << endl;
            system("cls");
            break;

        }

    } while (input != 'X' || input != 'x');
    
    return 0;

}

/*
                                            
▀███▀▀▀██▄▀████▀         ██     ▀███▀   ▀██▀
  ██   ▀██▄ ██          ▄██▄      ███   ▄█  
  ██   ▄██  ██         ▄█▀██▄      ███ ▄█   
  ███████   ██        ▄█  ▀██       ████    
  ██        ██     ▄  ████████       ██     
  ██        ██    ▄█ █▀      ██      ██     
▄████▄    █████████████▄   ▄████▄  ▄████▄   
                                            
                                            
Created by Angelo John Benedict Laus - BSCPE231
*/

void play() {

    char whosFirst;
    player1.name = "|";
    player2.name = "|";

    cout << " _____ ______   ________  ________  _________  _______   ________  _____ ______   ___  ________   ________     \n|\\   _ \\  _   \\|\\   __  \\|\\   ____\\|\\___   ___\\\\  ___ \\ |\\   __  \\|\\   _ \\  _   \\|\\  \\|\\   ___  \\|\\   ___ \\  \n\\ \\  \\\\\\__\\ \\  \\ \\  \\|\\  \\ \\  \\___|\\|___ \\  \\_\\ \\   __/|\\ \\  \\|\\  \\ \\  \\\\\\__\\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_|\\ \\  \n \\ \\  \\\\|__| \\  \\ \\   __  \\ \\_____  \\   \\ \\  \\ \\ \\  \\_|/_\\ \\   _  _\\ \\  \\\\|__| \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\ \\\\ \\  \n  \\ \\  \\    \\ \\  \\ \\  \\ \\  \\|____|\\  \\   \\ \\  \\ \\ \\  \\_|\\ \\ \\  \\\\  \\\\ \\  \\    \\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_\\\\ \\ \n   \\ \\__\\    \\ \\__\\ \\__\\ \\__\\____\\_\\  \\   \\ \\__\\ \\ \\_______\\ \\__\\\\ _\\\\ \\__\\    \\ \\__\\ \\__\\ \\__\\\\ \\__\\ \\_______\\\n    \\|__|     \\|__|\\|__|\\|__|\\_________\\   \\|__|  \\|_______|\\|__|\\|__|\\|__|     \\|__|\\|__|\\|__| \\|__|\\|_______|\n                            \\|_________|                                                                       \n\n" << endl;

    cout << "\t\t  ***********************************************************************" << endl;
        cout << "\t\t  *\t\t\t\tPLAY NOW!\t\t\t\t*\n\t\t  *\t\t\t\t\t\t\t\t\t*" << endl;
        cout << "\t\t  *\t\tWho's Player One:\t\t" << player1.name << "\t\t\t*";
        cout << "\n\t\t  *\t\tWho's Player Two:\t\t" << player2.name << "\t\t\t*" << endl;
        cout << "\t\t  *\t\t\t\t\t\t\t\t\t*\n\t\t  *\t\t\t\t\t\t\t\t\t*\n\t\t  *\t\t\t\t\t\t\t\t\t*\n\t\t  *\t\t\t\t\t\t\t\t\t*\n\t\t  *\t\t\t\t\t\t\t\t\t*\n\t\t  *\t\t\t\t\t\t\t\t\t*\n\t\t  *\t\t\t\t\t\t\t\t\t*\n\t\t  ***********************************************************************" << endl;

        cout << "\n\t\t\t\t\t\tWho's Player One?: ";
        cin >> player1.name; cin.ignore();

      system("cls");

    cout << " _____ ______   ________  ________  _________  _______   ________  _____ ______   ___  ________   ________     \n|\\   _ \\  _   \\|\\   __  \\|\\   ____\\|\\___   ___\\\\  ___ \\ |\\   __  \\|\\   _ \\  _   \\|\\  \\|\\   ___  \\|\\   ___ \\  \n\\ \\  \\\\\\__\\ \\  \\ \\  \\|\\  \\ \\  \\___|\\|___ \\  \\_\\ \\   __/|\\ \\  \\|\\  \\ \\  \\\\\\__\\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_|\\ \\  \n \\ \\  \\\\|__| \\  \\ \\   __  \\ \\_____  \\   \\ \\  \\ \\ \\  \\_|/_\\ \\   _  _\\ \\  \\\\|__| \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\ \\\\ \\  \n  \\ \\  \\    \\ \\  \\ \\  \\ \\  \\|____|\\  \\   \\ \\  \\ \\ \\  \\_|\\ \\ \\  \\\\  \\\\ \\  \\    \\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_\\\\ \\ \n   \\ \\__\\    \\ \\__\\ \\__\\ \\__\\____\\_\\  \\   \\ \\__\\ \\ \\_______\\ \\__\\\\ _\\\\ \\__\\    \\ \\__\\ \\__\\ \\__\\\\ \\__\\ \\_______\\\n    \\|__|     \\|__|\\|__|\\|__|\\_________\\   \\|__|  \\|_______|\\|__|\\|__|\\|__|     \\|__|\\|__|\\|__| \\|__|\\|_______|\n                            \\|_________|                                                                       \n\n" << endl;

    cout << "\t\t  ***********************************************************************" << endl;
        cout << "\t\t  *\t\t\t\tPLAY NOW!\t\t\t\t*\n\t\t  *\t\t\t\t\t\t\t\t\t*" << endl;
        cout << "\t\t  *\t\tWho's Player One:\t\t" << player1.name << "\t\t\t*" << endl;
        cout << "\t\t  *\t\tWho's Player Two:\t\t" << player2.name << "\t\t\t*" << endl;
        cout << "\t\t  *\t\t\t\t\t\t\t\t\t*\n\t\t  *\t\t\t\t\t\t\t\t\t*\n\t\t  *\t\t\t\t\t\t\t\t\t*\n\t\t  *\t\t\t\t\t\t\t\t\t*\n\t\t  *\t\t\t\t\t\t\t\t\t*\n\t\t  *\t\t\t\t\t\t\t\t\t*\n\t\t  *\t\t\t\t\t\t\t\t\t*\n\t\t  ***********************************************************************" << endl;

        cout << "\n\t\t\t\t\t\tWho's Player Two?: ";
        cin >> player2.name; cin.ignore();

      system("cls");

    cout << " _____ ______   ________  ________  _________  _______   ________  _____ ______   ___  ________   ________     \n|\\   _ \\  _   \\|\\   __  \\|\\   ____\\|\\___   ___\\\\  ___ \\ |\\   __  \\|\\   _ \\  _   \\|\\  \\|\\   ___  \\|\\   ___ \\  \n\\ \\  \\\\\\__\\ \\  \\ \\  \\|\\  \\ \\  \\___|\\|___ \\  \\_\\ \\   __/|\\ \\  \\|\\  \\ \\  \\\\\\__\\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_|\\ \\  \n \\ \\  \\\\|__| \\  \\ \\   __  \\ \\_____  \\   \\ \\  \\ \\ \\  \\_|/_\\ \\   _  _\\ \\  \\\\|__| \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\ \\\\ \\  \n  \\ \\  \\    \\ \\  \\ \\  \\ \\  \\|____|\\  \\   \\ \\  \\ \\ \\  \\_|\\ \\ \\  \\\\  \\\\ \\  \\    \\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_\\\\ \\ \n   \\ \\__\\    \\ \\__\\ \\__\\ \\__\\____\\_\\  \\   \\ \\__\\ \\ \\_______\\ \\__\\\\ _\\\\ \\__\\    \\ \\__\\ \\__\\ \\__\\\\ \\__\\ \\_______\\\n    \\|__|     \\|__|\\|__|\\|__|\\_________\\   \\|__|  \\|_______|\\|__|\\|__|\\|__|     \\|__|\\|__|\\|__| \\|__|\\|_______|\n                            \\|_________|                                                                       \n\n" << endl;

    cout << "\t\t  ***********************************************************************" << endl;
    cout << "\t\t  *\t\t\t\tPLAY NOW!\t\t\t\t*\n\t\t  *\t\t\t\t\t\t\t\t\t*" << endl;
    cout << "\t\t  *\t\tWho's Player One:\t\t" << player1.name << "\t\t\t*" << endl;
    cout << "\t\t  *\t\tWho's Player Two:\t\t" << player2.name << "\t\t\t*" << endl;
    cout << "\t\t  *\t\t\t\t\t\t\t\t\t*" << endl;
    cout << "\t\t  *\tPress [1] to let " << player1.name << " go first.\t\t\t\t\t*\n\t\t  *\tPress [2] to let " << player2.name << " go first.\t\t\t\t\t*\n\t\t  *\tPress [R] to randomly select who goes first.\t\t\t*" << endl;
    cout << "\t\t  *\t\t\t\t\t\t\t\t\t*\n\t\t  *\t\t\t\t\t\t\t\t\t*\n\t\t  *\t\t\t\t\t\t\t\t\t*\n\t\t  ***********************************************************************" << endl;

        cout << "\n\t\t\t\t\t\tYour Input: ";
        cin >> whosFirst; cin.ignore();

        switch (whosFirst) {

          case '1':
            cout << player1.name << " is going first!" << endl;
            goesFirst = '1';
            system("cls");
            code();
            game();
            break;

          case '2':
            cout << player2.name << " is going first!" << endl;
            goesFirst = '2';
            system("cls");
            code();
            game();
            break;

          case 'R':
          case 'r':
            cout << "Randomly selected." << endl;
            srand(time(0));
            int random = rand() % 2;
            if (random == 0) {
                cout << player1.name << " is going first!" << endl;
                goesFirst = '1';
                system("cls");
                code();
                game();
            } else {
                cout << player2.name << " is going first!" << endl;
                goesFirst = '2';
                system("cls");
                code();
                game();
            }
            break;

        }

}

/*
                                           
  ▄▄█▀▀▀█▄█ ▄▄█▀▀██▄ ▀███▀▀▀██▄ ▀███▀▀▀███ 
▄██▀     ▀███▀    ▀██▄ ██    ▀██▄ ██    ▀█ 
██▀       ▀█▀      ▀██ ██     ▀██ ██   █   
██        ██        ██ ██      ██ ██████   
██▄       ██▄      ▄██ ██     ▄██ ██   █  ▄
▀██▄     ▄▀██▄    ▄██▀ ██    ▄██▀ ██     ▄█
  ▀▀█████▀  ▀▀████▀▀ ▄████████▀ ▄██████████
                                           
                                           
Created by Angelo John Benedict Laus - BSCPE231
*/

void code() {
    int p1Input;
    int p2Input;

    cout << " _____ ______   ________  ________  _________  _______   ________  _____ ______   ___  ________   ________     \n|\\   _ \\  _   \\|\\   __  \\|\\   ____\\|\\___   ___\\\\  ___ \\ |\\   __  \\|\\   _ \\  _   \\|\\  \\|\\   ___  \\|\\   ___ \\  \n\\ \\  \\\\\\__\\ \\  \\ \\  \\|\\  \\ \\  \\___|\\|___ \\  \\_\\ \\   __/|\\ \\  \\|\\  \\ \\  \\\\\\__\\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_|\\ \\  \n \\ \\  \\\\|__| \\  \\ \\   __  \\ \\_____  \\   \\ \\  \\ \\ \\  \\_|/_\\ \\   _  _\\ \\  \\\\|__| \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\ \\\\ \\  \n  \\ \\  \\    \\ \\  \\ \\  \\ \\  \\|____|\\  \\   \\ \\  \\ \\ \\  \\_|\\ \\ \\  \\\\  \\\\ \\  \\    \\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_\\\\ \\ \n   \\ \\__\\    \\ \\__\\ \\__\\ \\__\\____\\_\\  \\   \\ \\__\\ \\ \\_______\\ \\__\\\\ _\\\\ \\__\\    \\ \\__\\ \\__\\ \\__\\\\ \\__\\ \\_______\\\n    \\|__|     \\|__|\\|__|\\|__|\\_________\\   \\|__|  \\|_______|\\|__|\\|__|\\|__|     \\|__|\\|__|\\|__| \\|__|\\|_______|\n                            \\|_________|                                                                       \n\n" << endl;

    cout << "*************\t\t" << player1.name << " input your four-digit code to be guessed.\n";
    for (int i = 0; i < 4; i++) {
        cout << "*************\t\t" << "Digit " << i+1 << ": ";
        cin >> p1Input;
        system("cls");
        cout << " _____ ______   ________  ________  _________  _______   ________  _____ ______   ___  ________   ________     \n|\\   _ \\  _   \\|\\   __  \\|\\   ____\\|\\___   ___\\\\  ___ \\ |\\   __  \\|\\   _ \\  _   \\|\\  \\|\\   ___  \\|\\   ___ \\  \n\\ \\  \\\\\\__\\ \\  \\ \\  \\|\\  \\ \\  \\___|\\|___ \\  \\_\\ \\   __/|\\ \\  \\|\\  \\ \\  \\\\\\__\\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_|\\ \\  \n \\ \\  \\\\|__| \\  \\ \\   __  \\ \\_____  \\   \\ \\  \\ \\ \\  \\_|/_\\ \\   _  _\\ \\  \\\\|__| \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\ \\\\ \\  \n  \\ \\  \\    \\ \\  \\ \\  \\ \\  \\|____|\\  \\   \\ \\  \\ \\ \\  \\_|\\ \\ \\  \\\\  \\\\ \\  \\    \\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_\\\\ \\ \n   \\ \\__\\    \\ \\__\\ \\__\\ \\__\\____\\_\\  \\   \\ \\__\\ \\ \\_______\\ \\__\\\\ _\\\\ \\__\\    \\ \\__\\ \\__\\ \\__\\\\ \\__\\ \\_______\\\n    \\|__|     \\|__|\\|__|\\|__|\\_________\\   \\|__|  \\|_______|\\|__|\\|__|\\|__|     \\|__|\\|__|\\|__| \\|__|\\|_______|\n                            \\|_________|                                                                       \n\n" << endl;


        while (p1Input < 1 || p1Input > 6) {
            cout << "*************\t\t" << "Invalid input. Please enter a number from 1 to 6:";
            cin >> p1Input;
            system("cls");
            cout << " _____ ______   ________  ________  _________  _______   ________  _____ ______   ___  ________   ________     \n|\\   _ \\  _   \\|\\   __  \\|\\   ____\\|\\___   ___\\\\  ___ \\ |\\   __  \\|\\   _ \\  _   \\|\\  \\|\\   ___  \\|\\   ___ \\  \n\\ \\  \\\\\\__\\ \\  \\ \\  \\|\\  \\ \\  \\___|\\|___ \\  \\_\\ \\   __/|\\ \\  \\|\\  \\ \\  \\\\\\__\\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_|\\ \\  \n \\ \\  \\\\|__| \\  \\ \\   __  \\ \\_____  \\   \\ \\  \\ \\ \\  \\_|/_\\ \\   _  _\\ \\  \\\\|__| \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\ \\\\ \\  \n  \\ \\  \\    \\ \\  \\ \\  \\ \\  \\|____|\\  \\   \\ \\  \\ \\ \\  \\_|\\ \\ \\  \\\\  \\\\ \\  \\    \\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_\\\\ \\ \n   \\ \\__\\    \\ \\__\\ \\__\\ \\__\\____\\_\\  \\   \\ \\__\\ \\ \\_______\\ \\__\\\\ _\\\\ \\__\\    \\ \\__\\ \\__\\ \\__\\\\ \\__\\ \\_______\\\n    \\|__|     \\|__|\\|__|\\|__|\\_________\\   \\|__|  \\|_______|\\|__|\\|__|\\|__|     \\|__|\\|__|\\|__| \\|__|\\|_______|\n                            \\|_________|                                                                       \n\n" << endl;
        }

        bool duplicate = false;
        for (int j = 0; j < i; j++) {
            if (p1Code[j] == p1Input) {
                duplicate = true;
                break;
            }
        }

        if (!duplicate) {
            p1Code[i] = p1Input;
        } else {
            cout << "*************\t\t" << "Duplicate number. Please enter a different number.";
            system("pause");
            system("cls");
            cout << " _____ ______   ________  ________  _________  _______   ________  _____ ______   ___  ________   ________     \n|\\   _ \\  _   \\|\\   __  \\|\\   ____\\|\\___   ___\\\\  ___ \\ |\\   __  \\|\\   _ \\  _   \\|\\  \\|\\   ___  \\|\\   ___ \\  \n\\ \\  \\\\\\__\\ \\  \\ \\  \\|\\  \\ \\  \\___|\\|___ \\  \\_\\ \\   __/|\\ \\  \\|\\  \\ \\  \\\\\\__\\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_|\\ \\  \n \\ \\  \\\\|__| \\  \\ \\   __  \\ \\_____  \\   \\ \\  \\ \\ \\  \\_|/_\\ \\   _  _\\ \\  \\\\|__| \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\ \\\\ \\  \n  \\ \\  \\    \\ \\  \\ \\  \\ \\  \\|____|\\  \\   \\ \\  \\ \\ \\  \\_|\\ \\ \\  \\\\  \\\\ \\  \\    \\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_\\\\ \\ \n   \\ \\__\\    \\ \\__\\ \\__\\ \\__\\____\\_\\  \\   \\ \\__\\ \\ \\_______\\ \\__\\\\ _\\\\ \\__\\    \\ \\__\\ \\__\\ \\__\\\\ \\__\\ \\_______\\\n    \\|__|     \\|__|\\|__|\\|__|\\_________\\   \\|__|  \\|_______|\\|__|\\|__|\\|__|     \\|__|\\|__|\\|__| \\|__|\\|_______|\n                            \\|_________|                                                                       \n\n" << endl;
            i--;
        }
    }

    system("cls");

    cout << " _____ ______   ________  ________  _________  _______   ________  _____ ______   ___  ________   ________     \n|\\   _ \\  _   \\|\\   __  \\|\\   ____\\|\\___   ___\\\\  ___ \\ |\\   __  \\|\\   _ \\  _   \\|\\  \\|\\   ___  \\|\\   ___ \\  \n\\ \\  \\\\\\__\\ \\  \\ \\  \\|\\  \\ \\  \\___|\\|___ \\  \\_\\ \\   __/|\\ \\  \\|\\  \\ \\  \\\\\\__\\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_|\\ \\  \n \\ \\  \\\\|__| \\  \\ \\   __  \\ \\_____  \\   \\ \\  \\ \\ \\  \\_|/_\\ \\   _  _\\ \\  \\\\|__| \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\ \\\\ \\  \n  \\ \\  \\    \\ \\  \\ \\  \\ \\  \\|____|\\  \\   \\ \\  \\ \\ \\  \\_|\\ \\ \\  \\\\  \\\\ \\  \\    \\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_\\\\ \\ \n   \\ \\__\\    \\ \\__\\ \\__\\ \\__\\____\\_\\  \\   \\ \\__\\ \\ \\_______\\ \\__\\\\ _\\\\ \\__\\    \\ \\__\\ \\__\\ \\__\\\\ \\__\\ \\_______\\\n    \\|__|     \\|__|\\|__|\\|__|\\_________\\   \\|__|  \\|_______|\\|__|\\|__|\\|__|     \\|__|\\|__|\\|__| \\|__|\\|_______|\n                            \\|_________|                                                                       \n\n" << endl;


    cout << "*************\t\t" << player2.name << " input your four-digit code to be guessed.\n";
    for (int i = 0; i < 4; i++) {
        cout << "*************\t\t" << "Digit " << i+1 << ": ";
        cin >> p2Input;
        system("cls");
        cout << " _____ ______   ________  ________  _________  _______   ________  _____ ______   ___  ________   ________     \n|\\   _ \\  _   \\|\\   __  \\|\\   ____\\|\\___   ___\\\\  ___ \\ |\\   __  \\|\\   _ \\  _   \\|\\  \\|\\   ___  \\|\\   ___ \\  \n\\ \\  \\\\\\__\\ \\  \\ \\  \\|\\  \\ \\  \\___|\\|___ \\  \\_\\ \\   __/|\\ \\  \\|\\  \\ \\  \\\\\\__\\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_|\\ \\  \n \\ \\  \\\\|__| \\  \\ \\   __  \\ \\_____  \\   \\ \\  \\ \\ \\  \\_|/_\\ \\   _  _\\ \\  \\\\|__| \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\ \\\\ \\  \n  \\ \\  \\    \\ \\  \\ \\  \\ \\  \\|____|\\  \\   \\ \\  \\ \\ \\  \\_|\\ \\ \\  \\\\  \\\\ \\  \\    \\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_\\\\ \\ \n   \\ \\__\\    \\ \\__\\ \\__\\ \\__\\____\\_\\  \\   \\ \\__\\ \\ \\_______\\ \\__\\\\ _\\\\ \\__\\    \\ \\__\\ \\__\\ \\__\\\\ \\__\\ \\_______\\\n    \\|__|     \\|__|\\|__|\\|__|\\_________\\   \\|__|  \\|_______|\\|__|\\|__|\\|__|     \\|__|\\|__|\\|__| \\|__|\\|_______|\n                            \\|_________|                                                                       \n\n" << endl;

        while (p2Input < 1 || p2Input > 6) {
            cout << "*************\t\t" << "Invalid input. Please enter a number from 1 to 6: ";
            cin >> p2Input;
            system("cls");
            cout << " _____ ______   ________  ________  _________  _______   ________  _____ ______   ___  ________   ________     \n|\\   _ \\  _   \\|\\   __  \\|\\   ____\\|\\___   ___\\\\  ___ \\ |\\   __  \\|\\   _ \\  _   \\|\\  \\|\\   ___  \\|\\   ___ \\  \n\\ \\  \\\\\\__\\ \\  \\ \\  \\|\\  \\ \\  \\___|\\|___ \\  \\_\\ \\   __/|\\ \\  \\|\\  \\ \\  \\\\\\__\\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_|\\ \\  \n \\ \\  \\\\|__| \\  \\ \\   __  \\ \\_____  \\   \\ \\  \\ \\ \\  \\_|/_\\ \\   _  _\\ \\  \\\\|__| \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\ \\\\ \\  \n  \\ \\  \\    \\ \\  \\ \\  \\ \\  \\|____|\\  \\   \\ \\  \\ \\ \\  \\_|\\ \\ \\  \\\\  \\\\ \\  \\    \\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_\\\\ \\ \n   \\ \\__\\    \\ \\__\\ \\__\\ \\__\\____\\_\\  \\   \\ \\__\\ \\ \\_______\\ \\__\\\\ _\\\\ \\__\\    \\ \\__\\ \\__\\ \\__\\\\ \\__\\ \\_______\\\n    \\|__|     \\|__|\\|__|\\|__|\\_________\\   \\|__|  \\|_______|\\|__|\\|__|\\|__|     \\|__|\\|__|\\|__| \\|__|\\|_______|\n                            \\|_________|                                                                       \n\n" << endl;
        }

        bool duplicate = false;
        for (int j = 0; j < i; j++) {
            if (p2Code[j] == p2Input) {
                duplicate = true;
                break;
            }
        }

        if (!duplicate) {
            p2Code[i] = p2Input;
        } else {
            cout << "*************\t\t" << "Duplicate number. Please enter a different number.";
            system("pause");
            system("cls");
            cout << " _____ ______   ________  ________  _________  _______   ________  _____ ______   ___  ________   ________     \n|\\   _ \\  _   \\|\\   __  \\|\\   ____\\|\\___   ___\\\\  ___ \\ |\\   __  \\|\\   _ \\  _   \\|\\  \\|\\   ___  \\|\\   ___ \\  \n\\ \\  \\\\\\__\\ \\  \\ \\  \\|\\  \\ \\  \\___|\\|___ \\  \\_\\ \\   __/|\\ \\  \\|\\  \\ \\  \\\\\\__\\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_|\\ \\  \n \\ \\  \\\\|__| \\  \\ \\   __  \\ \\_____  \\   \\ \\  \\ \\ \\  \\_|/_\\ \\   _  _\\ \\  \\\\|__| \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\ \\\\ \\  \n  \\ \\  \\    \\ \\  \\ \\  \\ \\  \\|____|\\  \\   \\ \\  \\ \\ \\  \\_|\\ \\ \\  \\\\  \\\\ \\  \\    \\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_\\\\ \\ \n   \\ \\__\\    \\ \\__\\ \\__\\ \\__\\____\\_\\  \\   \\ \\__\\ \\ \\_______\\ \\__\\\\ _\\\\ \\__\\    \\ \\__\\ \\__\\ \\__\\\\ \\__\\ \\_______\\\n    \\|__|     \\|__|\\|__|\\|__|\\_________\\   \\|__|  \\|_______|\\|__|\\|__|\\|__|     \\|__|\\|__|\\|__| \\|__|\\|_______|\n                            \\|_________|                                                                       \n\n" << endl;
            i--;
        }
    }

    system("cls");
}


/*
                                                  
  ▄▄█▀▀▀█▄█      ██     ▀████▄     ▄███▀███▀▀▀███ 
▄██▀     ▀█     ▄██▄      ████    ████   ██    ▀█ 
██▀       ▀    ▄█▀██▄     █ ██   ▄█ ██   ██   █   
██            ▄█  ▀██     █  ██  █▀ ██   ██████   
██▄    ▀████  ████████    █  ██▄█▀  ██   ██   █  ▄
▀██▄     ██  █▀      ██   █  ▀██▀   ██   ██     ▄█
  ▀▀███████▄███▄   ▄████▄███▄ ▀▀  ▄████▄██████████
                                                  
                                                  
Created by Angelo John Benedict Laus - BSCPE231
*/

void game() {
    int p1Guess[4];
    int p2Guess[4];
    int maxTurns = 10;
    int turn = 1;

    cout << " _____ ______   ________  ________  _________  _______   ________  _____ ______   ___  ________   ________     \n|\\   _ \\  _   \\|\\   __  \\|\\   ____\\|\\___   ___\\\\  ___ \\ |\\   __  \\|\\   _ \\  _   \\|\\  \\|\\   ___  \\|\\   ___ \\  \n\\ \\  \\\\\\__\\ \\  \\ \\  \\|\\  \\ \\  \\___|\\|___ \\  \\_\\ \\   __/|\\ \\  \\|\\  \\ \\  \\\\\\__\\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_|\\ \\  \n \\ \\  \\\\|__| \\  \\ \\   __  \\ \\_____  \\   \\ \\  \\ \\ \\  \\_|/_\\ \\   _  _\\ \\  \\\\|__| \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\ \\\\ \\  \n  \\ \\  \\    \\ \\  \\ \\  \\ \\  \\|____|\\  \\   \\ \\  \\ \\ \\  \\_|\\ \\ \\  \\\\  \\\\ \\  \\    \\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_\\\\ \\ \n   \\ \\__\\    \\ \\__\\ \\__\\ \\__\\____\\_\\  \\   \\ \\__\\ \\ \\_______\\ \\__\\\\ _\\\\ \\__\\    \\ \\__\\ \\__\\ \\__\\\\ \\__\\ \\_______\\\n    \\|__|     \\|__|\\|__|\\|__|\\_________\\   \\|__|  \\|_______|\\|__|\\|__|\\|__|     \\|__|\\|__|\\|__| \\|__|\\|_______|\n                            \\|_________|                                                                       \n\n" << endl;

    switch (goesFirst) {
        case '1':
            while (turn <= maxTurns) {
                cout << "*************\t\t" << "Turn " << turn << endl;

                cout << "*************\t\t" << player1.name << ", enter your guess.\n";
                for (int i = 0; i < 4; i++) {
                    cout << "*************\t\t" << "Digit " << i+1 << ": ";
                    cin >> p1Guess[i];
                    system("cls");
                    cout << " _____ ______   ________  ________  _________  _______   ________  _____ ______   ___  ________   ________     \n|\\   _ \\  _   \\|\\   __  \\|\\   ____\\|\\___   ___\\\\  ___ \\ |\\   __  \\|\\   _ \\  _   \\|\\  \\|\\   ___  \\|\\   ___ \\  \n\\ \\  \\\\\\__\\ \\  \\ \\  \\|\\  \\ \\  \\___|\\|___ \\  \\_\\ \\   __/|\\ \\  \\|\\  \\ \\  \\\\\\__\\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_|\\ \\  \n \\ \\  \\\\|__| \\  \\ \\   __  \\ \\_____  \\   \\ \\  \\ \\ \\  \\_|/_\\ \\   _  _\\ \\  \\\\|__| \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\ \\\\ \\  \n  \\ \\  \\    \\ \\  \\ \\  \\ \\  \\|____|\\  \\   \\ \\  \\ \\ \\  \\_|\\ \\ \\  \\\\  \\\\ \\  \\    \\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_\\\\ \\ \n   \\ \\__\\    \\ \\__\\ \\__\\ \\__\\____\\_\\  \\   \\ \\__\\ \\ \\_______\\ \\__\\\\ _\\\\ \\__\\    \\ \\__\\ \\__\\ \\__\\\\ \\__\\ \\_______\\\n    \\|__|     \\|__|\\|__|\\|__|\\_________\\   \\|__|  \\|_______|\\|__|\\|__|\\|__|     \\|__|\\|__|\\|__| \\|__|\\|_______|\n                            \\|_________|                                                                       \n\n" << endl;

                }

                int correctPositions = 0;
                int correctValues = 0;

                for (int i = 0; i < 4; i++) {
                    if (p1Guess[i] == p2Code[i]) {
                        correctPositions++;
                    }
                    for (int j = 0; j < 4; j++) {
                        if (p1Guess[i] == p2Code[j] && i != j) {
                            correctValues++;
                        }
                    }
                }

                cout << "*************\t\t" << player1.name << ": " << correctPositions << " in correct positions, " << correctValues << " correct values in different spots." << endl;
                player1.guessCount++;


                if (correctPositions == 4) {
                    cout << "*************\t\t" << player1.name << " wins!" << endl;
                    player1.winCount++;
                    system("pause");
                    return;
                }

                cout << "*************\t\t" << player2.name << ", enter your guess.\n";
                for (int i = 0; i < 4; i++) {
                    cout << "*************\t\t" << "Digit " << i+1 << ": ";
                    cin >> p2Guess[i];
                    system("cls");
                    cout << " _____ ______   ________  ________  _________  _______   ________  _____ ______   ___  ________   ________     \n|\\   _ \\  _   \\|\\   __  \\|\\   ____\\|\\___   ___\\\\  ___ \\ |\\   __  \\|\\   _ \\  _   \\|\\  \\|\\   ___  \\|\\   ___ \\  \n\\ \\  \\\\\\__\\ \\  \\ \\  \\|\\  \\ \\  \\___|\\|___ \\  \\_\\ \\   __/|\\ \\  \\|\\  \\ \\  \\\\\\__\\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_|\\ \\  \n \\ \\  \\\\|__| \\  \\ \\   __  \\ \\_____  \\   \\ \\  \\ \\ \\  \\_|/_\\ \\   _  _\\ \\  \\\\|__| \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\ \\\\ \\  \n  \\ \\  \\    \\ \\  \\ \\  \\ \\  \\|____|\\  \\   \\ \\  \\ \\ \\  \\_|\\ \\ \\  \\\\  \\\\ \\  \\    \\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_\\\\ \\ \n   \\ \\__\\    \\ \\__\\ \\__\\ \\__\\____\\_\\  \\   \\ \\__\\ \\ \\_______\\ \\__\\\\ _\\\\ \\__\\    \\ \\__\\ \\__\\ \\__\\\\ \\__\\ \\_______\\\n    \\|__|     \\|__|\\|__|\\|__|\\_________\\   \\|__|  \\|_______|\\|__|\\|__|\\|__|     \\|__|\\|__|\\|__| \\|__|\\|_______|\n                            \\|_________|                                                                       \n\n" << endl;

                }

                int p2correctPositions = 0;
                int p2correctValues = 0;

                for (int i = 0; i < 4; i++) {
                    if (p2Guess[i] == p1Code[i]) {
                        p2correctPositions++;
                    }
                    for (int j = 0; j < 4; j++) {
                        if (p2Guess[i] == p1Code[j] && i != j) {
                            p2correctValues++;
                        }
                    }
                }

                cout << "*************\t\t" << player2.name << ": " << p2correctPositions << " in correct positions, " << p2correctValues << " correct values in different spots." << endl;
                player2.guessCount++;

                if (p2correctPositions == 4) {
                    cout << player2.name << " wins!" << endl;
                    player2.winCount++;
                    system("pause");
                    return;
                }

                turn++;

                if (turn > maxTurns) {
                    cout << "*************\t\t" << "Maximum number of turns reached. It's a draw!" << endl;
                    player1.tiesCount++;
                    player2.tiesCount++;
                }
            }
        break;

        case '2':
            while (turn <= maxTurns) {
                cout << "*************\t\t" << "Turn " << turn << endl;

                cout << "*************\t\t" << player2.name << ", enter your guess.\n";
                for (int i = 0; i < 4; i++) {
                    cout << "*************\t\t" << "Digit " << i+1 << ": ";
                    cin >> p2Guess[i];
                    system("cls");
                    cout << " _____ ______   ________  ________  _________  _______   ________  _____ ______   ___  ________   ________     \n|\\   _ \\  _   \\|\\   __  \\|\\   ____\\|\\___   ___\\\\  ___ \\ |\\   __  \\|\\   _ \\  _   \\|\\  \\|\\   ___  \\|\\   ___ \\  \n\\ \\  \\\\\\__\\ \\  \\ \\  \\|\\  \\ \\  \\___|\\|___ \\  \\_\\ \\   __/|\\ \\  \\|\\  \\ \\  \\\\\\__\\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_|\\ \\  \n \\ \\  \\\\|__| \\  \\ \\   __  \\ \\_____  \\   \\ \\  \\ \\ \\  \\_|/_\\ \\   _  _\\ \\  \\\\|__| \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\ \\\\ \\  \n  \\ \\  \\    \\ \\  \\ \\  \\ \\  \\|____|\\  \\   \\ \\  \\ \\ \\  \\_|\\ \\ \\  \\\\  \\\\ \\  \\    \\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_\\\\ \\ \n   \\ \\__\\    \\ \\__\\ \\__\\ \\__\\____\\_\\  \\   \\ \\__\\ \\ \\_______\\ \\__\\\\ _\\\\ \\__\\    \\ \\__\\ \\__\\ \\__\\\\ \\__\\ \\_______\\\n    \\|__|     \\|__|\\|__|\\|__|\\_________\\   \\|__|  \\|_______|\\|__|\\|__|\\|__|     \\|__|\\|__|\\|__| \\|__|\\|_______|\n                            \\|_________|                                                                       \n\n" << endl;

                }

                int correctPositions = 0;
                int correctValues = 0;

                for (int i = 0; i < 4; i++) {
                    if (p2Guess[i] == p1Code[i]) {
                        correctPositions++;
                    }
                    for (int j = 0; j < 4; j++) {
                        if (p2Guess[i] == p1Code[j] && i != j) {
                            correctValues++;
                        }
                    }
                }

                cout << "*************\t\t" << player2.name << ": " << correctPositions << " in correct positions, " << correctValues << " correct values in different spots." << endl;
                player1.guessCount++;

                if (correctPositions == 4) {
                    cout << "*************\t\t" << player2.name << " wins!" << endl;
                    player2.winCount++;
                    system("pause");
                    return;
                }

                cout << "*************\t\t" << player1.name << ", enter your guess.\n";
                for (int i = 0; i < 4; i++) {
                    cout << "*************\t\t" << "Digit " << i+1 << ": ";
                    cin >> p1Guess[i];
                    system("cls");
                    cout << " _____ ______   ________  ________  _________  _______   ________  _____ ______   ___  ________   ________     \n|\\   _ \\  _   \\|\\   __  \\|\\   ____\\|\\___   ___\\\\  ___ \\ |\\   __  \\|\\   _ \\  _   \\|\\  \\|\\   ___  \\|\\   ___ \\  \n\\ \\  \\\\\\__\\ \\  \\ \\  \\|\\  \\ \\  \\___|\\|___ \\  \\_\\ \\   __/|\\ \\  \\|\\  \\ \\  \\\\\\__\\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_|\\ \\  \n \\ \\  \\\\|__| \\  \\ \\   __  \\ \\_____  \\   \\ \\  \\ \\ \\  \\_|/_\\ \\   _  _\\ \\  \\\\|__| \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\ \\\\ \\  \n  \\ \\  \\    \\ \\  \\ \\  \\ \\  \\|____|\\  \\   \\ \\  \\ \\ \\  \\_|\\ \\ \\  \\\\  \\\\ \\  \\    \\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_\\\\ \\ \n   \\ \\__\\    \\ \\__\\ \\__\\ \\__\\____\\_\\  \\   \\ \\__\\ \\ \\_______\\ \\__\\\\ _\\\\ \\__\\    \\ \\__\\ \\__\\ \\__\\\\ \\__\\ \\_______\\\n    \\|__|     \\|__|\\|__|\\|__|\\_________\\   \\|__|  \\|_______|\\|__|\\|__|\\|__|     \\|__|\\|__|\\|__| \\|__|\\|_______|\n                            \\|_________|                                                                       \n\n" << endl;

                }

                int p1correctPositions = 0;
                int p1correctValues = 0;

                for (int i = 0; i < 4; i++) {
                    if (p1Guess[i] == p2Code[i]) {
                        p1correctPositions++;
                    }
                    for (int j = 0; j < 4; j++) {
                        if (p1Guess[i] == p2Code[j] && i != j) {
                            p1correctValues++;
                        }
                    }
                }

                cout << "*************\t\t" << player1.name << ": " << p1correctPositions << " in correct positions, " << p1correctValues << " correct values in different spots." << endl;
                player1.guessCount++;

                if (p1correctPositions == 4) {
                    cout << "*************\t\t" << player2.name << " wins!" << endl;
                    player1.winCount++;
                    system("pause");
                    return;
                }

                turn++;

                if (turn > maxTurns) {
                    cout << "*************\t\t" << "Maximum number of turns reached. It's a draw!" << endl;
                    player1.tiesCount++;
                    player2.tiesCount++;
                }
            }

        break;

        default:
            while (turn <= maxTurns) {
                cout << "*************\t\t" << "Turn " << turn << endl;

                cout << "*************\t\t" << player1.name << ", enter your guess.\n";
                for (int i = 0; i < 4; i++) {
                    cout << "*************\t\t" << "Digit " << i+1 << ": ";
                    cin >> p1Guess[i];
                    system("cls");
                    cout << " _____ ______   ________  ________  _________  _______   ________  _____ ______   ___  ________   ________     \n|\\   _ \\  _   \\|\\   __  \\|\\   ____\\|\\___   ___\\\\  ___ \\ |\\   __  \\|\\   _ \\  _   \\|\\  \\|\\   ___  \\|\\   ___ \\  \n\\ \\  \\\\\\__\\ \\  \\ \\  \\|\\  \\ \\  \\___|\\|___ \\  \\_\\ \\   __/|\\ \\  \\|\\  \\ \\  \\\\\\__\\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_|\\ \\  \n \\ \\  \\\\|__| \\  \\ \\   __  \\ \\_____  \\   \\ \\  \\ \\ \\  \\_|/_\\ \\   _  _\\ \\  \\\\|__| \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\ \\\\ \\  \n  \\ \\  \\    \\ \\  \\ \\  \\ \\  \\|____|\\  \\   \\ \\  \\ \\ \\  \\_|\\ \\ \\  \\\\  \\\\ \\  \\    \\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_\\\\ \\ \n   \\ \\__\\    \\ \\__\\ \\__\\ \\__\\____\\_\\  \\   \\ \\__\\ \\ \\_______\\ \\__\\\\ _\\\\ \\__\\    \\ \\__\\ \\__\\ \\__\\\\ \\__\\ \\_______\\\n    \\|__|     \\|__|\\|__|\\|__|\\_________\\   \\|__|  \\|_______|\\|__|\\|__|\\|__|     \\|__|\\|__|\\|__| \\|__|\\|_______|\n                            \\|_________|                                                                       \n\n" << endl;

                }

                int correctPositions = 0;
                int correctValues = 0;

                for (int i = 0; i < 4; i++) {
                    if (p1Guess[i] == p2Code[i]) {
                        correctPositions++;
                    }
                    for (int j = 0; j < 4; j++) {
                        if (p1Guess[i] == p2Code[j] && i != j) {
                            correctValues++;
                        }
                    }
                }

                cout << "*************\t\t" << player1.name << ": " << correctPositions << " in correct positions, " << correctValues << " correct values in different spots." << endl;
                player1.guessCount++;

                if (correctPositions == 4) {
                    cout << "*************\t\t" << player1.name << " wins!" << endl;
                    player1.winCount++;
                    system("pause");
                    return;
                }

                cout << "*************\t\t" << player2.name << ", enter your guess.\n";
                for (int i = 0; i < 4; i++) {
                    cout << "*************\t\t" << "Digit " << i+1 << ": ";
                    cin >> p2Guess[i];
                    system("cls");
                    cout << " _____ ______   ________  ________  _________  _______   ________  _____ ______   ___  ________   ________     \n|\\   _ \\  _   \\|\\   __  \\|\\   ____\\|\\___   ___\\\\  ___ \\ |\\   __  \\|\\   _ \\  _   \\|\\  \\|\\   ___  \\|\\   ___ \\  \n\\ \\  \\\\\\__\\ \\  \\ \\  \\|\\  \\ \\  \\___|\\|___ \\  \\_\\ \\   __/|\\ \\  \\|\\  \\ \\  \\\\\\__\\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_|\\ \\  \n \\ \\  \\\\|__| \\  \\ \\   __  \\ \\_____  \\   \\ \\  \\ \\ \\  \\_|/_\\ \\   _  _\\ \\  \\\\|__| \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\ \\\\ \\  \n  \\ \\  \\    \\ \\  \\ \\  \\ \\  \\|____|\\  \\   \\ \\  \\ \\ \\  \\_|\\ \\ \\  \\\\  \\\\ \\  \\    \\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_\\\\ \\ \n   \\ \\__\\    \\ \\__\\ \\__\\ \\__\\____\\_\\  \\   \\ \\__\\ \\ \\_______\\ \\__\\\\ _\\\\ \\__\\    \\ \\__\\ \\__\\ \\__\\\\ \\__\\ \\_______\\\n    \\|__|     \\|__|\\|__|\\|__|\\_________\\   \\|__|  \\|_______|\\|__|\\|__|\\|__|     \\|__|\\|__|\\|__| \\|__|\\|_______|\n                            \\|_________|                                                                       \n\n" << endl;

                }

                int p2correctPositions = 0;
                int p2correctValues = 0;

                for (int i = 0; i < 4; i++) {
                    if (p2Guess[i] == p1Code[i]) {
                        p2correctPositions++;
                    }
                    for (int j = 0; j < 4; j++) {
                        if (p2Guess[i] == p1Code[j] && i != j) {
                            p2correctValues++;
                        }
                    }
                }

                cout << "*************\t\t" << player2.name << ": " << p2correctPositions << " in correct positions, " << p2correctValues << " correct values in different spots." << endl;
                player2.guessCount++;

                if (p2correctPositions == 4) {
                    cout << "*************\t\t" << player2.name << " wins!" << endl;
                    player2.winCount++;
                    system("pause");
                    return;
                }

                turn++;

                if (turn > maxTurns) {
                    cout << "*************\t\t" << "Maximum number of turns reached. It's a draw!" << endl;
                    player1.tiesCount++;
                    player2.tiesCount++;
                }
            }

        break;

    }


}

void mCodeRelease() {

        cout << " _____ ______   ________  ________  _________  _______   ________  _____ ______   ___  ________   ________     \n|\\   _ \\  _   \\|\\   __  \\|\\   ____\\|\\___   ___\\\\  ___ \\ |\\   __  \\|\\   _ \\  _   \\|\\  \\|\\   ___  \\|\\   ___ \\  \n\\ \\  \\\\\\__\\ \\  \\ \\  \\|\\  \\ \\  \\___|\\|___ \\  \\_\\ \\   __/|\\ \\  \\|\\  \\ \\  \\\\\\__\\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_|\\ \\  \n \\ \\  \\\\|__| \\  \\ \\   __  \\ \\_____  \\   \\ \\  \\ \\ \\  \\_|/_\\ \\   _  _\\ \\  \\\\|__| \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\ \\\\ \\  \n  \\ \\  \\    \\ \\  \\ \\  \\ \\  \\|____|\\  \\   \\ \\  \\ \\ \\  \\_|\\ \\ \\  \\\\  \\\\ \\  \\    \\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_\\\\ \\ \n   \\ \\__\\    \\ \\__\\ \\__\\ \\__\\____\\_\\  \\   \\ \\__\\ \\ \\_______\\ \\__\\\\ _\\\\ \\__\\    \\ \\__\\ \\__\\ \\__\\\\ \\__\\ \\_______\\\n    \\|__|     \\|__|\\|__|\\|__|\\_________\\   \\|__|  \\|_______|\\|__|\\|__|\\|__|     \\|__|\\|__|\\|__| \\|__|\\|_______|\n                            \\|_________|                                                                       \n\n" << endl;
        cout << "*************\t\t" << player1.name << "'s code was: " << p1Code[0] << " " << p1Code[1] << " " << p1Code[2] << " " << p1Code[3] << endl;
        cout << "*************\t\t" << player2.name << "'s code was: " << p2Code[0] << " " << p2Code[1] << " " << p2Code[2] << " " << p2Code[3] << endl;

        cout << "\n\t\t\t\t"; system("pause");


}

/*
                                                                                                                        
 ▄█▀▀▀█▄█████▀███▄   ▀███▀ ▄▄█▀▀▀█▄█▀████▀   ▀███▀▀▀███▀███▀▀▀██▄▀████▀         ██     ▀███▀   ▀██▀███▀▀▀███▀███▀▀▀██▄  
▄██    ▀█ ██   ███▄    █ ▄██▀     ▀█  ██       ██    ▀█  ██   ▀██▄ ██          ▄██▄      ███   ▄█   ██    ▀█  ██   ▀██▄ 
▀███▄     ██   █ ███   █ ██▀       ▀  ██       ██   █    ██   ▄██  ██         ▄█▀██▄      ███ ▄█    ██   █    ██   ▄██  
  ▀█████▄ ██   █  ▀██▄ █ ██           ██       ██████    ███████   ██        ▄█  ▀██       ████     ██████    ███████   
▄     ▀██ ██   █   ▀██▄█ ██▄    ▀████ ██     ▄ ██   █  ▄ ██        ██     ▄  ████████       ██      ██   █  ▄ ██  ██▄   
██     ██ ██   █     ███ ▀██▄     ██  ██    ▄█ ██     ▄█ ██        ██    ▄█ █▀      ██      ██      ██     ▄█ ██   ▀██▄ 
█▀█████▀▄████▄███▄    ██   ▀▀███████████████████████████████▄    █████████████▄   ▄████▄  ▄████▄  ▄██████████████▄ ▄███▄
                                                                                                                        
                                                                                                                        
Created by Angelo John Benedict Laus - BSCPE231
*/

void spGame() {

    srand(time(0));
    int spCode[4];
    bool usedNum[6] = {false};

    for (int i = 0; i < 4; i++) {
        int randNum;
        do {
            randNum = (rand() % 6) + 1;
        } while (usedNum[randNum - 1]);

        spCode[i] = randNum;
        usedNum[randNum - 1] = true;
    }

    int spGuess[4];
    int maxTurns = 10;
    int turn = 1;

        cout << " _____ ______   ________  ________  _________  _______   ________  _____ ______   ___  ________   ________     \n|\\   _ \\  _   \\|\\   __  \\|\\   ____\\|\\___   ___\\\\  ___ \\ |\\   __  \\|\\   _ \\  _   \\|\\  \\|\\   ___  \\|\\   ___ \\  \n\\ \\  \\\\\\__\\ \\  \\ \\  \\|\\  \\ \\  \\___|\\|___ \\  \\_\\ \\   __/|\\ \\  \\|\\  \\ \\  \\\\\\__\\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_|\\ \\  \n \\ \\  \\\\|__| \\  \\ \\   __  \\ \\_____  \\   \\ \\  \\ \\ \\  \\_|/_\\ \\   _  _\\ \\  \\\\|__| \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\ \\\\ \\  \n  \\ \\  \\    \\ \\  \\ \\  \\ \\  \\|____|\\  \\   \\ \\  \\ \\ \\  \\_|\\ \\ \\  \\\\  \\\\ \\  \\    \\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_\\\\ \\ \n   \\ \\__\\    \\ \\__\\ \\__\\ \\__\\____\\_\\  \\   \\ \\__\\ \\ \\_______\\ \\__\\\\ _\\\\ \\__\\    \\ \\__\\ \\__\\ \\__\\\\ \\__\\ \\_______\\\n    \\|__|     \\|__|\\|__|\\|__|\\_________\\   \\|__|  \\|_______|\\|__|\\|__|\\|__|     \\|__|\\|__|\\|__| \\|__|\\|_______|\n                            \\|_________|                                                                       \n\n" << endl;


            while (turn <= maxTurns) {
                cout << "*************\t\t" << "Turn " << turn << endl;

                cout << "*************\t\t" << "Enter your guess.\n";
                for (int i = 0; i < 4; i++) {
                    cout << "*************\t\t" << "Digit " << i+1 << ": ";
                    cin >> spGuess[i];
                    system("cls");
                    cout << " _____ ______   ________  ________  _________  _______   ________  _____ ______   ___  ________   ________     \n|\\   _ \\  _   \\|\\   __  \\|\\   ____\\|\\___   ___\\\\  ___ \\ |\\   __  \\|\\   _ \\  _   \\|\\  \\|\\   ___  \\|\\   ___ \\  \n\\ \\  \\\\\\__\\ \\  \\ \\  \\|\\  \\ \\  \\___|\\|___ \\  \\_\\ \\   __/|\\ \\  \\|\\  \\ \\  \\\\\\__\\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_|\\ \\  \n \\ \\  \\\\|__| \\  \\ \\   __  \\ \\_____  \\   \\ \\  \\ \\ \\  \\_|/_\\ \\   _  _\\ \\  \\\\|__| \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\ \\\\ \\  \n  \\ \\  \\    \\ \\  \\ \\  \\ \\  \\|____|\\  \\   \\ \\  \\ \\ \\  \\_|\\ \\ \\  \\\\  \\\\ \\  \\    \\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_\\\\ \\ \n   \\ \\__\\    \\ \\__\\ \\__\\ \\__\\____\\_\\  \\   \\ \\__\\ \\ \\_______\\ \\__\\\\ _\\\\ \\__\\    \\ \\__\\ \\__\\ \\__\\\\ \\__\\ \\_______\\\n    \\|__|     \\|__|\\|__|\\|__|\\_________\\   \\|__|  \\|_______|\\|__|\\|__|\\|__|     \\|__|\\|__|\\|__| \\|__|\\|_______|\n                            \\|_________|                                                                       \n\n" << endl;

                }

                int correctPositions = 0;
                int correctValues = 0;

                for (int i = 0; i < 4; i++) {
                    if (spGuess[i] == spCode[i]) {
                        correctPositions++;
                    }
                    for (int j = 0; j < 4; j++) {
                        if (spGuess[i] == spCode[j] && i != j) {
                            correctValues++;
                        }
                    }
                }

                cout << "*************\t\t" << "Your guess: " << correctPositions << " in correct positions, " << correctValues << " correct values in different spots." << endl;
                singlePlayer.guessCount++;

                if (correctPositions == 4) {
                    cout << "*************\t\t" << "You cracked the code. You win!\n\n*************\t\tThe code was: " << spCode[0] << " " << spCode[1] << " "  << spCode[2] << " "  << spCode[3] << " " << "!" << endl;
                    singlePlayer.winCount++;
                    system("pause");
                    return;
                }

                turn++;

                if (turn > maxTurns) {
                    cout << "*************\t\t" << "Maximum number of turns reached. You lose!\n\n*************\t\tThe code was: " << spCode[0] << " " << spCode[1] << " "  << spCode[2] << " "  << spCode[3] << " " << "!" << endl;
                    cout << "*************\t\t"; system("pause");
                }
            }

}


/*
                                                                                    
███▀▀██▀▀██████▀   ▀███▀██▀▀██▀▀███ ▄▄█▀▀██▄ ▀███▀▀▀██▄ ▀████▀     ██     ▀████▀    
█▀   ██   ▀███       █ █▀   ██   ▀███▀    ▀██▄ ██   ▀██▄  ██      ▄██▄      ██      
     ██     ██       █      ██    ██▀      ▀██ ██   ▄██   ██     ▄█▀██▄     ██      
     ██     ██       █      ██    ██        ██ ███████    ██    ▄█  ▀██     ██      
     ██     ██       █      ██    ██▄      ▄██ ██  ██▄    ██    ████████    ██     ▄
     ██     ██▄     ▄█      ██    ▀██▄    ▄██▀ ██   ▀██▄  ██   █▀      ██   ██    ▄█
   ▄████▄    ▀██████▀▀    ▄████▄    ▀▀████▀▀ ▄████▄ ▄███▄████▄███▄   ▄████▄█████████
                                                                                    
                                                                                    
Created by Angelo John Benedict Laus - BSCPE231
*/

void tutorial() {

    cout << " _____ ______   ________  ________  _________  _______   ________  _____ ______   ___  ________   ________     \n|\\   _ \\  _   \\|\\   __  \\|\\   ____\\|\\___   ___\\\\  ___ \\ |\\   __  \\|\\   _ \\  _   \\|\\  \\|\\   ___  \\|\\   ___ \\  \n\\ \\  \\\\\\__\\ \\  \\ \\  \\|\\  \\ \\  \\___|\\|___ \\  \\_\\ \\   __/|\\ \\  \\|\\  \\ \\  \\\\\\__\\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_|\\ \\  \n \\ \\  \\\\|__| \\  \\ \\   __  \\ \\_____  \\   \\ \\  \\ \\ \\  \\_|/_\\ \\   _  _\\ \\  \\\\|__| \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\ \\\\ \\  \n  \\ \\  \\    \\ \\  \\ \\  \\ \\  \\|____|\\  \\   \\ \\  \\ \\ \\  \\_|\\ \\ \\  \\\\  \\\\ \\  \\    \\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_\\\\ \\ \n   \\ \\__\\    \\ \\__\\ \\__\\ \\__\\____\\_\\  \\   \\ \\__\\ \\ \\_______\\ \\__\\\\ _\\\\ \\__\\    \\ \\__\\ \\__\\ \\__\\\\ \\__\\ \\_______\\\n    \\|__|     \\|__|\\|__|\\|__|\\_________\\   \\|__|  \\|_______|\\|__|\\|__|\\|__|     \\|__|\\|__|\\|__| \\|__|\\|_______|\n                            \\|_________|                                                                       \n\n" << endl;

    cout << "\t\t  ***********************************************************************" << endl;
    cout << "\t\t  *\t\t\t\tHOW TO PLAY\t\t\t\t*\n\t\t  *\t\t\t\t\t\t\t\t\t*" << endl;

    cout << "\t\t  *\t1. Both players will input a code from the following numbers:\t*\n\t\t  *\t\t[1]\t[2]\t[3]\t[4]\t[5]\t[6]\t\t*\n\t\t  *\t\t* There should be no repeating numbers in the code.\t*\n\t\t  *\t2. The opposing player must guess the code you have set.\t*\n\t\t  *\t3. The opposing player will receive a clue on how close\t\t*\n\t\t  *\t\tare any of the numbers they inputted or if there is\t*\n\t\t  *\t\ta number that is already a match.\t\t\t*\n\t\t  *\t4. First to crack earns a point and wins the game.\t\t*" << endl;
    cout << "\t\t  *\t\t\t\t\t\t\t\t\t*\n\t\t  ***********************************************************************" << endl;
    cout << "\n\t\t\t\t"; system("pause");

}

/*
                                                    
 ▄█▀▀▀█▄███▀▀██▀▀███     ██     ███▀▀██▀▀███▄█▀▀▀█▄█
▄██    ▀█▀   ██   ▀█    ▄██▄    █▀   ██   ▀███    ▀█
▀███▄        ██        ▄█▀██▄        ██    ▀███▄    
  ▀█████▄    ██       ▄█  ▀██        ██      ▀█████▄
▄     ▀██    ██       ████████       ██    ▄     ▀██
██     ██    ██      █▀      ██      ██    ██     ██
█▀█████▀   ▄████▄  ▄███▄   ▄████▄  ▄████▄  █▀█████▀ 
                                                    
                                                    
Created by Angelo John Benedict Laus - BSCPE231
*/

void stats(const string& filename, player& playerStats) {

    fstream file(filename, ios::in | ios::out | ios::app);

    if (!file) {
        cerr << "Error: Unable to open file for reading and writing." << endl;
        return;
    }

    player players[50];
    int numPlayers = 0;
    bool playerExists = false;

    while (numPlayers < 100 && file >> players[numPlayers].name >> players[numPlayers].guessCount >> players[numPlayers].winCount >> players[numPlayers].tiesCount) {
        if (players[numPlayers].name == playerStats.name) {
            players[numPlayers].guessCount = playerStats.guessCount;
            players[numPlayers].winCount = playerStats.winCount;
            players[numPlayers].tiesCount = playerStats.tiesCount;
            playerExists = true;
        }
        numPlayers++;
    }

    file.close();

    ofstream outFile(filename, ios::out);

    if (!outFile) {
        cerr << "Error: Unable to open file for writing." << endl;
        return;
    }

    for (int i = 0; i < numPlayers; i++) {
        outFile << players[i].name << " " << players[i].guessCount << " " << players[i].winCount << " " << players[i].tiesCount << endl;
    }

    if (!playerExists) {
        outFile << playerStats.name << " " << playerStats.guessCount << " " << playerStats.winCount << " " << playerStats.tiesCount << endl;
    }

    outFile.close();
}

/*
                                                                                                          
 ▄█▀▀▀█▄█ ▄▄█▀▀▀█▄█ ▄▄█▀▀██▄ ▀███▀▀▀██▄ ▀███▀▀▀███▀███▀▀▀██▄ ▄▄█▀▀██▄       ██     ▀███▀▀▀██▄ ▀███▀▀▀██▄  
▄██    ▀███▀     ▀███▀    ▀██▄ ██   ▀██▄  ██    ▀█  ██    ████▀    ▀██▄    ▄██▄      ██   ▀██▄  ██    ▀██▄
▀███▄   ██▀       ▀█▀      ▀██ ██   ▄██   ██   █    ██    ███▀      ▀██   ▄█▀██▄     ██   ▄██   ██     ▀██
  ▀█████▄█        ██        ██ ███████    ██████    ██▀▀▀█▄▄█        ██  ▄█  ▀██     ███████    ██      ██
▄     ▀███▄       ██▄      ▄██ ██  ██▄    ██   █  ▄ ██    ▀██▄      ▄██  ████████    ██  ██▄    ██     ▄██
██     ████▄     ▄▀██▄    ▄██▀ ██   ▀██▄  ██     ▄█ ██    ▄███▄    ▄██▀ █▀      ██   ██   ▀██▄  ██    ▄██▀
█▀█████▀  ▀▀█████▀  ▀▀████▀▀ ▄████▄ ▄███▄██████████████████  ▀▀████▀▀ ▄███▄   ▄████▄████▄ ▄███▄████████▀  
                                                                                                          
                                                                                                          
Created by Angelo John Benedict Laus - BSCPE231
*/

void scoreboard() {

    cout << " _____ ______   ________  ________  _________  _______   ________  _____ ______   ___  ________   ________     \n|\\   _ \\  _   \\|\\   __  \\|\\   ____\\|\\___   ___\\\\  ___ \\ |\\   __  \\|\\   _ \\  _   \\|\\  \\|\\   ___  \\|\\   ___ \\  \n\\ \\  \\\\\\__\\ \\  \\ \\  \\|\\  \\ \\  \\___|\\|___ \\  \\_\\ \\   __/|\\ \\  \\|\\  \\ \\  \\\\\\__\\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_|\\ \\  \n \\ \\  \\\\|__| \\  \\ \\   __  \\ \\_____  \\   \\ \\  \\ \\ \\  \\_|/_\\ \\   _  _\\ \\  \\\\|__| \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\ \\\\ \\  \n  \\ \\  \\    \\ \\  \\ \\  \\ \\  \\|____|\\  \\   \\ \\  \\ \\ \\  \\_|\\ \\ \\  \\\\  \\\\ \\  \\    \\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_\\\\ \\ \n   \\ \\__\\    \\ \\__\\ \\__\\ \\__\\____\\_\\  \\   \\ \\__\\ \\ \\_______\\ \\__\\\\ _\\\\ \\__\\    \\ \\__\\ \\__\\ \\__\\\\ \\__\\ \\_______\\\n    \\|__|     \\|__|\\|__|\\|__|\\_________\\   \\|__|  \\|_______|\\|__|\\|__|\\|__|     \\|__|\\|__|\\|__| \\|__|\\|_______|\n                            \\|_________|                                                                       \n\n" << endl;

    cout << "\t\t *****************************************************************************" << endl;

    ifstream file("stats.txt");

    if (!file.is_open()) {
        cerr << "Failed to open the file." << endl;
    }

    string header;
    getline(file, header);
    cout << "\t\t  " << "Name\t\t\tGuesses\t\t\tWins\t\t\tDraws" << endl;

    string name, guesses, wins, draws;
    while (file >> name >> guesses >> wins >> draws) {
        cout << "\t\t  " << name;
            cout << "\t";
        cout << "\t\t  " << guesses;
            cout << "\t";
        cout << "\t\t  " << wins;
            cout << "\t";
        cout << "\t\t  " << draws << endl;
    }


    file.close();

    cout << "\t\t *****************************************************************************" << endl;
    cout << "\n\t\t\t\t"; system("pause");

}

/*
                                                                           
  ▄▄█▀▀▀█▄█  ▄▄█▀▀██▄   ▄▄█▀▀██▄ ▀███▀▀▀██▄ ▀███▀▀▀██▄███▀   ▀██▀███▀▀▀███ 
▄██▀     ▀█▄██▀    ▀██▄██▀    ▀██▄ ██    ▀██▄ ██    ██ ███   ▄█   ██    ▀█ 
██▀       ▀██▀      ▀███▀      ▀██ ██     ▀██ ██    ██  ███ ▄█    ██   █   
██         ██        ███        ██ ██      ██ ██▀▀▀█▄▄   ████     ██████   
██▄    ▀█████▄      ▄███▄      ▄██ ██     ▄██ ██    ▀█    ██      ██   █  ▄
▀██▄     ██▀██▄    ▄██▀██▄    ▄██▀ ██    ▄██▀ ██    ▄█    ██      ██     ▄█
  ▀▀███████  ▀▀████▀▀   ▀▀████▀▀ ▄████████▀ ▄████████   ▄████▄  ▄██████████
                                                                           
                                                                           
Created by Angelo John Benedict Laus - BSCPE231                                                     
*/

void goodbye() {

    cout << " _____ ______   ________  ________  _________  _______   ________  _____ ______   ___  ________   ________     \n|\\   _ \\  _   \\|\\   __  \\|\\   ____\\|\\___   ___\\\\  ___ \\ |\\   __  \\|\\   _ \\  _   \\|\\  \\|\\   ___  \\|\\   ___ \\  \n\\ \\  \\\\\\__\\ \\  \\ \\  \\|\\  \\ \\  \\___|\\|___ \\  \\_\\ \\   __/|\\ \\  \\|\\  \\ \\  \\\\\\__\\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_|\\ \\  \n \\ \\  \\\\|__| \\  \\ \\   __  \\ \\_____  \\   \\ \\  \\ \\ \\  \\_|/_\\ \\   _  _\\ \\  \\\\|__| \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\ \\\\ \\  \n  \\ \\  \\    \\ \\  \\ \\  \\ \\  \\|____|\\  \\   \\ \\  \\ \\ \\  \\_|\\ \\ \\  \\\\  \\\\ \\  \\    \\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\_\\\\ \\ \n   \\ \\__\\    \\ \\__\\ \\__\\ \\__\\____\\_\\  \\   \\ \\__\\ \\ \\_______\\ \\__\\\\ _\\\\ \\__\\    \\ \\__\\ \\__\\ \\__\\\\ \\__\\ \\_______\\\n    \\|__|     \\|__|\\|__|\\|__|\\_________\\   \\|__|  \\|_______|\\|__|\\|__|\\|__|     \\|__|\\|__|\\|__| \\|__|\\|_______|\n                            \\|_________|                                                                       \n\n" << endl;

    cout << "\t\t\t\t\t\tGoodbye!" << endl;
    cout << "\n\t\t\t\t"; system("pause");

}

// Code ends here. Once again, created by Angelo John Benedict Laus - BSCPE231